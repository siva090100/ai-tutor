# Generated by Django 2.2.7 on 2020-02-16 07:06

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None), size=None)),
                ('correct_choices', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_answer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_id', models.PositiveIntegerField()),
                ('problem_name', models.CharField(blank=True, max_length=15, null=True)),
                ('problem_text', models.CharField(max_length=1000)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('difficulty_level', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard'), ('very_hard', 'very_hard'), ('brain_twister', 'brain_twister')], default='easy', max_length=10)),
                ('question_score', models.IntegerField(default=1)),
                ('diagnostic_test', models.BooleanField(default=1)),
                ('answer_type', models.ForeignKey(on_delete='CASCADE', to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=30)),
                ('skill_desc', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=40)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=40)),
                ('students', models.ManyToManyField(to='tutor_v1.Student', verbose_name='list of students')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.IntegerField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('correct_or_wrong', models.BooleanField()),
                ('time_taken', models.DateTimeField()),
                ('test_type', models.CharField(choices=[('diagnostic_test', 'Diagnostic Test'), ('practice', 'practice'), ('custom_test', 'custom_test')], default='practice', max_length=50)),
                ('problem_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Problem')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_spent', models.DateTimeField()),
                ('attempts', models.IntegerField()),
                ('problem_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Problem')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='skill_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Skill'),
        ),
        migrations.CreateModel(
            name='Probability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prior_probability', models.IntegerField()),
                ('slip_probability', models.IntegerField()),
                ('guess_probability', models.IntegerField()),
                ('transition_probability', models.IntegerField()),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Skill')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosticTestResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('correct_or_wrong', models.BooleanField()),
                ('problem_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Problem')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosticResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutor_v1.Student')),
            ],
        ),
    ]
